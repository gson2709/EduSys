package GUI;

import DAO.ChuyenDeDAO;
import DAO.KhoaHocDAO;
import ENTITY.ChuyenDe;
import ENTITY.KhoaHoc;
import UTILS.Auth;
import UTILS.MsgBox;
import UTILS.XDate;
import UTILS.XImage;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import java.io.File;
import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

public class KhoaHocJDialog extends javax.swing.JFrame {

    /**
     * Creates new form KhoaHocJDialog
     */
    public KhoaHocJDialog() {
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(XImage.getAppIcon());
        setTitle("EduSys - Quản lý khóa học");
        fillComboBoxChuyenDe();
        fillTable();
        row = -1;
        updateStatus();
    }
    KhoaHocDAO khdao = new KhoaHocDAO();
    ChuyenDeDAO cddao = new ChuyenDeDAO();
    int row = -1;
    public static String qrCode = "";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtNgayKG = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTenCD = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtThoiLuong = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtHocPhi = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtNguoiTao = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNgayTao = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKhoaHoc = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        cboChuyenDe = new javax.swing.JComboBox<>();
        btnQRCode = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("CHUYÊN ĐỀ");

        jLabel4.setText("Khai giảng");

        jLabel5.setText("Tên chuyên đề");

        jLabel6.setText("Thời lượng (giờ)");

        jLabel7.setText("Học phí");

        jLabel8.setText("Ghi chú");

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane1.setViewportView(txtGhiChu);

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnNew.setText("Mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        jLabel9.setText("Người tạo");

        jLabel10.setText("Ngày tạo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNguoiTao, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtTenCD, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtHocPhi, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(txtThoiLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                            .addComponent(txtNgayKG)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10)
                            .addComponent(txtNgayTao)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenCD)
                    .addComponent(txtNgayKG))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtHocPhi)
                    .addComponent(txtThoiLuong))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNgayTao)
                    .addComponent(txtNguoiTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnXoa)
                    .addComponent(btnNew)
                    .addComponent(btnFirst)
                    .addComponent(btnLast)
                    .addComponent(btnNext)
                    .addComponent(btnPrev))
                .addGap(44, 44, 44))
        );

        jTabbedPane1.addTab("CẬP NHẬT", jPanel1);

        tblKhoaHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "MÃ KH", "HỌC PHÍ", "THỜI LƯỢNG", "KHAI GIẢNG", "TẠO BỞI", "NGÀY TẠO"
            }
        ));
        tblKhoaHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhoaHocMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblKhoaHoc);

        jTabbedPane1.addTab("DANH SÁCH", jScrollPane2);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        cboChuyenDe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboChuyenDeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboChuyenDe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cboChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnQRCode.setText("QR Code");
        btnQRCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQRCodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnQRCode)
                .addGap(235, 235, 235))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQRCode)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void insert(){
        if (Auth.user!=null){
            if (checkForm())
                try {
                    KhoaHoc kh = getForm();
                    khdao.insert(kh);
                    fillTable();
                    clearForm();
                    MsgBox.alert(this, "Thêm khóa học thành công");
                } 
                catch (Exception e) {
                    MsgBox.alert(this, "Lỗi thêm khóa học mới");
                    e.printStackTrace();
                }
        }
        else{
            MsgBox.alert(this, "Bạn chưa đăng nhập");
        }
    }
    void update(){
        if (Auth.user!=null){
            if (checkForm())
                try {
                    KhoaHoc kh = getForm();
                    khdao.update(kh);
                    fillTable();
                    MsgBox.alert(this, "Cập nhật khóa học thành công");
                } 
                catch (Exception e) {
                    MsgBox.alert(this, "Lỗi cập nhật khóa học");
                    e.printStackTrace();
                }
        }
        else{
            MsgBox.alert(this, "Bạn chưa đăng nhập");
        }
    }
    void delete(){
        if (!Auth.isManager())
            MsgBox.alert(this, "Bạn không có quyền xóa khóa học");
        else{
            if (Auth.user != null) {
                row = tblKhoaHoc.getSelectedRow();
                int MaKH = (int) tblKhoaHoc.getValueAt(row, 0);
                if (MsgBox.confirm(this, "Bạn có chắc chắn muốn xóa khóa học này?")) {
                    try {
                        khdao.delete(MaKH);
                        fillTable();
                        clearForm();
                        MsgBox.alert(this, "Đã xóa khóa học");
                    } catch (Exception e) {
                        MsgBox.alert(this, "Lỗi xóa khóa học");
                        e.printStackTrace();
                    }
                }
            } else {
                MsgBox.alert(this, "Bạn chưa đăng nhập");
            }
        }
    }
    void clearForm(){
        KhoaHoc kh = new KhoaHoc();
        kh.setNgayTao(java.sql.Date.valueOf(XDate.toString(XDate.addDays(new Date(), -2), "yyyy-MM-dd")));
        kh.setMaNV(Auth.user!=null?Auth.user.getMaNV():"");
        setForm(kh);
        row = -1;
        updateStatus();
    }
    void edit(){
        KhoaHoc kh = khdao.selectById((int) tblKhoaHoc.getValueAt(row, 0));
        setForm(kh);
        updateStatus();
    }
    void first(){
        row = 0;
        tblKhoaHoc.setRowSelectionInterval(row, row);
    }
    void prev(){
        if (row>0){
            row--;
        }
        else
            row = tblKhoaHoc.getRowCount() - 1;
        tblKhoaHoc.setRowSelectionInterval(row, row);
    }
    void next(){
        if (row<tblKhoaHoc.getRowCount()-1){
            row++;
        }
        else
            row = 0;
        tblKhoaHoc.setRowSelectionInterval(row, row);
    }
    void last(){
        row = tblKhoaHoc.getRowCount() - 1;
        tblKhoaHoc.setRowSelectionInterval(row, row);
    }
    void fillComboBoxChuyenDe(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboChuyenDe.getModel();
        model.removeAllElements();
        List<ChuyenDe> list = cddao.selectAll();
        for (ChuyenDe cd:list){
            model.addElement(cd);
        }
//        cboChuyenDe.setModel(model);
        cboChuyenDe.getEditor().getItem().toString();
    }
    void fillTable(){
        DefaultTableModel model = (DefaultTableModel) tblKhoaHoc.getModel();
        model.setRowCount(0);
        try {
            ChuyenDe cd = (ChuyenDe) cboChuyenDe.getSelectedItem();
            List<KhoaHoc> list = khdao.selectByChuyenDe(cd.getMaCD());
            for (KhoaHoc kh:list){
                Object[] row = {kh.getMaKH(),kh.getHocPhi(),kh.getThoiLuong(),XDate.addDays(kh.getNgayKG(), 2),kh.getMaNV(),XDate.addDays(kh.getNgayTao(), 2)};
                model.addRow(row);
            }
//            tblKhoaHoc.setModel(model);
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }
    void selectChuyenDe(){
        ChuyenDe cd = (ChuyenDe) cboChuyenDe.getSelectedItem();
        txtTenCD.setText(cd.getTenCD());
        txtHocPhi.setText(cd.getHocPhi()+"");
        txtThoiLuong.setText(cd.getThoiLuong()+"");
        txtNgayTao.setText(java.sql.Date.valueOf(XDate.toString(new Date(), "yyyy-MM-dd"))+"");
        txtNguoiTao.setText(Auth.user!=null?Auth.user.getMaNV():"");
        txtGhiChu.setText(cd.getTenCD());
        fillTable();
        row = -1;
        updateStatus();
    }
    void setForm(KhoaHoc kh){
        ChuyenDe cd = (ChuyenDe) cboChuyenDe.getSelectedItem();
        txtTenCD.setText(cd.getTenCD());
        if (kh.getNgayKG()!=null)
            txtNgayKG.setText(XDate.addDays(kh.getNgayKG(), 2)+"");
        else
            txtNgayKG.setText("");
        txtThoiLuong.setText(kh.getThoiLuong()+"");
        txtHocPhi.setText(kh.getHocPhi()+"");
        txtNguoiTao.setText(kh.getMaNV());
        if (kh.getNgayTao()!=null)
            txtNgayTao.setText(XDate.addDays(kh.getNgayTao(), 2)+"");
        else
            txtNgayTao.setText("");
        txtGhiChu.setText(kh.getGhiChu());
    } 
    KhoaHoc getForm(){
        KhoaHoc kh = new KhoaHoc();
        ChuyenDe cd = (ChuyenDe) cboChuyenDe.getSelectedItem();
        if (row>-1)
            kh.setMaKH((int) tblKhoaHoc.getValueAt(row, 0));
        kh.setMaCD(cd.getMaCD());
        kh.setThoiLuong(Integer.valueOf(txtThoiLuong.getText()));
        kh.setHocPhi(Double.valueOf(txtHocPhi.getText()));
        kh.setMaNV(txtNguoiTao.getText());
        kh.setNgayKG(java.sql.Date.valueOf(txtNgayKG.getText()));
        kh.setGhiChu(txtGhiChu.getText()); 
        kh.setNgayTao(java.sql.Date.valueOf(txtNgayTao.getText()));  
        return kh;
    }
    boolean checkForm(){
        boolean check = true;
        String checkNull = "", checkValid = "", message = "";
        if (txtNgayKG.getText().trim().length()==0){
            checkNull = checkNull + "Ngày khai giảng";
            check = false;
        }
        else{
            try {
                Date ngayKG = java.sql.Date.valueOf(txtNgayKG.getText().trim());
                Date now = new Date();
                if (ngayKG.after(now)){
                    checkValid = checkValid + "Ngày khai giảng đang ở tương lai\n";
                    check = false;
                }
            } 
            catch (Exception e) {
                checkValid = checkValid + "Ngày khai giảng phải đúng định dạng (yyyy-MM-dd)\n";
                check = false;
            }
        }
        if (txtHocPhi.getText().trim().length()==0){
            checkNull = checkNull + ", Học phí";
            check = false;
        }
        else{
            try {
                double hocPhi = Double.parseDouble(txtHocPhi.getText().trim());
                if (hocPhi<=0){
                    checkValid = checkValid + "Học phí phải lớn hơn 0\n";
                    check = false;
                }
            } 
            catch (Exception e) {
                checkValid = checkValid + "Học phí phải là số\n";
                check = false;
            }
        }
        if (txtThoiLuong.getText().trim().length()==0){
            checkNull = checkNull + ", Thời lượng";
            check = false;
        }
        else{
            try {
                int thoiLuong = Integer.parseInt(txtThoiLuong.getText().trim());
                if (thoiLuong<=0){
                    checkValid = checkValid + "Thời lượng phải lớn hơn 0\n";
                    check = false;
                }
            } 
            catch (Exception e) {
                checkValid = checkValid + "Thời lượng phải là số tự nhiên\n";
                check = false;
            }
        }            
        if (!checkNull.equals("")){
            if (checkNull.charAt(0)==','){
                checkNull = checkNull.substring(2);
            }
            message = message + checkNull + " không được để trống\n";
        }
        message = message + checkValid;
        if (check==false)
            MsgBox.alert(this, message);
        return check;
    }
    void updateStatus(){
        boolean edit = (row >= 0);
        boolean first = (row == 0);
        boolean last = (row == tblKhoaHoc.getRowCount()-1);
        txtTenCD.setEditable(false);
        txtNguoiTao.setEditable(false);
        txtNgayTao.setEditable(false);
        btnAdd.setEnabled(!edit);
        btnEdit.setEnabled(edit);
        btnXoa.setEnabled(edit);
//        btnFirst.setEnabled(edit && !first);
//        btnPrev.setEnabled(edit && !first);
//        btnNext.setEnabled(edit && !last);
//        btnLast.setEnabled(edit && !last);
    }
    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        prev();
        edit();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
        edit();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
        edit();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
        edit();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        insert();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        update();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void cboChuyenDeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboChuyenDeItemStateChanged
        selectChuyenDe();
    }//GEN-LAST:event_cboChuyenDeItemStateChanged

    private void tblKhoaHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhoaHocMouseClicked
        row = tblKhoaHoc.getSelectedRow();
        edit();
    }//GEN-LAST:event_tblKhoaHocMouseClicked

    private void btnQRCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQRCodeActionPerformed
        try {
            ChuyenDe cd = (ChuyenDe) cboChuyenDe.getSelectedItem();
            int maKH = (Integer) tblKhoaHoc.getValueAt(row, 0);
            KhoaHoc kh = khdao.selectById(maKH);
            String data = "Chuyen de: "+kh.getMaCD()+"\n"+"Khoa hoc khai giang: "+kh.getNgayKG();
            String filePath = kh.getMaKH()+"_"+kh.getMaCD()+"_"+kh.getNgayKG()+".png";
            File destination = new File("qr Code", filePath);
            filePath = Paths.get(destination.getAbsolutePath()).toString();
            File qrFile = new File(filePath);
            QRCodeWriter qrCodeWriter = new QRCodeWriter();
            BitMatrix matrix = qrCodeWriter.encode(data, BarcodeFormat.QR_CODE, 300, 300);
            Path path = Paths.get(destination.getAbsolutePath());
            MatrixToImageWriter.writeToPath(matrix, "PNG", path);
            qrCode = filePath;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnQRCodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhoaHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhoaHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhoaHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhoaHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KhoaHocJDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnQRCode;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboChuyenDe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblKhoaHoc;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtHocPhi;
    private javax.swing.JTextField txtNgayKG;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtNguoiTao;
    private javax.swing.JTextField txtTenCD;
    private javax.swing.JTextField txtThoiLuong;
    // End of variables declaration//GEN-END:variables
}
