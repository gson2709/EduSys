package GUI;

import DAO.NguoiHocDAO;
import ENTITY.NguoiHoc;
import UTILS.Auth;
import UTILS.Excel;
import UTILS.MsgBox;
import UTILS.XDate;
import UTILS.XImage;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class NguoiHocJDialog extends javax.swing.JFrame {

    /**
     * Creates new form ChuyenDeJDialog
     */
    public NguoiHocJDialog() {
        initComponents();
        setTitle("EduSys - Quản lý người học");
        setIconImage(XImage.getAppIcon());
        setLocationRelativeTo(null);
        rdoNu.setSelected(true);
        fillTable();
        row = -1;
        updateStatus();
    }
    NguoiHocDAO dao = new NguoiHocDAO();
    int row = -1;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtMaNH = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtNgaySinh = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtFind = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        btnExcel = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("QUẢN LÝ NGƯỜI HỌC");

        jLabel4.setText("Mã người học");

        jLabel5.setText("Họ và tên");

        jLabel8.setText("Ghi chú");

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane1.setViewportView(txtGhiChu);

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnNew.setText("Mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        jLabel9.setText("Giới tính");

        buttonGroup1.add(rdoNam);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        jLabel10.setText("Điện thoại");

        jLabel11.setText("Địa chỉ email");

        jLabel12.setText("Ngày sinh");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMaNH)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdoNam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdoNu))
                            .addComponent(jLabel10)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNgaySinh)
                            .addComponent(txtEmail)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaNH, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoNam)
                    .addComponent(rdoNu)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnXoa)
                    .addComponent(btnNew)
                    .addComponent(btnFirst)
                    .addComponent(btnPrev)
                    .addComponent(btnNext)
                    .addComponent(btnLast))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("CẬP NHẬT", jPanel1);

        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "MÃ NH", "HỌ VÀ TÊN", "GIỚI TÍNH", "NGÀY SINH", "ĐIỆN THOẠI", "EMAIL", "MÃ NV", "NGÀY TẠO"
            }
        ));
        tblNguoiHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNguoiHocMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblNguoiHoc);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "TÌM KIẾM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        btnFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Search.png"))); // NOI18N
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFind)
                .addGap(18, 18, 18)
                .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        btnExcel.setText("Xuất file excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        jButton1.setText("Đọc file excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcel)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcel)
                    .addComponent(jButton1))
                .addGap(15, 15, 15))
        );

        jTabbedPane1.addTab("DANH SÁCH", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void insert(){
        if (Auth.user!=null){
            if (checkForm())
                try {
                    NguoiHoc nh = getForm();
                    if (nh != null) {
                        dao.insert(nh);
                        fillTable();
                        clearForm();
                        MsgBox.alert(this, "Thêm người học thành công");
                    }
                } catch (Exception e) {
                    MsgBox.alert(this, "Lỗi thêm người học mới");
                    e.printStackTrace();
                }
        }
        else
            MsgBox.alert(this, "Bạn chưa đăng nhập");
    }
    void update(){
        if (Auth.user!=null){
            if (checkForm())
                try {
                    NguoiHoc nh = getForm();
                    dao.update(nh);
                    fillTable();
                    MsgBox.alert(this, "Cập nhật người học thành công");
                } 
                catch (Exception e) {
                    MsgBox.alert(this, "Lỗi cập nhật người học");
                    e.printStackTrace();
                }
        }        
        else
            MsgBox.alert(this, "Bạn chưa đăng nhập");
    }
    void delete(){
        if (!Auth.isManager())
            MsgBox.alert(this, "Bạn không có quyền xóa người học");
        else{
            String MaNH = txtMaNH.getText();
            if (MsgBox.confirm(this, "Bạn có chắc chắn muốn xóa nhân viên này?")) {
                try {
                    dao.delete(MaNH);
                    fillTable();
                    clearForm();
                    MsgBox.alert(this, "Đã xóa người học");
                } catch (Exception e) {
                    MsgBox.alert(this, "Lỗi xóa người học");
                    e.printStackTrace();
                }
            }
        }
    }
    void clearForm(){
        NguoiHoc nh = new NguoiHoc();
        setForm(nh);
        row = -1;
        updateStatus();
    }
    void edit(){
        NguoiHoc nh = dao.selectById((String) tblNguoiHoc.getValueAt(row, 1));
        setForm(nh);
        updateStatus();
    }
    void first(){
        row = 0;
        tblNguoiHoc.setRowSelectionInterval(row, row);
    }
    void prev(){
        if (row>0){
            row--;
        }
        else
            row = tblNguoiHoc.getRowCount() - 1;
        tblNguoiHoc.setRowSelectionInterval(row, row);
    }
    void next(){
        if (row<tblNguoiHoc.getRowCount()-1){
            row++;
        }
        else
            row = 0;
        tblNguoiHoc.setRowSelectionInterval(row, row);
    }
    void last(){
        row = tblNguoiHoc.getRowCount() - 1;
        tblNguoiHoc.setRowSelectionInterval(row, row);
    }
    void fillTable(){
        DefaultTableModel model = (DefaultTableModel) tblNguoiHoc.getModel();
        model.setRowCount(0);
        int i = 1;
        try {
            List<NguoiHoc> list;
            if (txtFind.getText().length()==0){
                list = dao.selectAll();
            }
            else{
                list = dao.selectByKeyWord(txtFind.getText());
            }
            for (NguoiHoc nh:list){
                Object[] row = {i++,nh.getMaNH(),nh.getHoTen(),nh.isGioiTinh()?"Nam":"Nữ",XDate.toString(XDate.addDays(nh.getNgaySinh(), 2), "yyyy-MM-dd"),nh.getDienThoai(),nh.getEmail(),nh.getMaNV(),XDate.toString(XDate.addDays(nh.getNgayDK(), 2), "dd-MM-yyyy")};
                model.addRow(row);
            }
            tblNguoiHoc.setModel(model);
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }
    void setForm(NguoiHoc nh){
        txtMaNH.setText(nh.getMaNH());
        txtHoTen.setText(nh.getHoTen());
        rdoNam.setSelected(nh.isGioiTinh());
        rdoNu.setSelected(!nh.isGioiTinh()); 
        if (nh.getNgaySinh()!=null)
            txtNgaySinh.setText(XDate.toString(XDate.addDays(nh.getNgaySinh(), 2), "yyyy-MM-dd"));
        else
            txtNgaySinh.setText("");
        txtPhone.setText(nh.getDienThoai());
        txtEmail.setText(nh.getEmail());
        txtGhiChu.setText(nh.getGhiChu());
    }
    NguoiHoc getForm(){
        NguoiHoc nh = new NguoiHoc();
        nh.setMaNH(txtMaNH.getText());
        nh.setHoTen(txtHoTen.getText());
        nh.setGioiTinh(rdoNam.isSelected());
        nh.setNgaySinh(java.sql.Date.valueOf(txtNgaySinh.getText()));
        nh.setDienThoai(txtPhone.getText());
        nh.setEmail(txtEmail.getText());
        nh.setGhiChu(txtGhiChu.getText());
        nh.setMaNV(Auth.user.getMaNV());
        nh.setNgayDK(java.sql.Date.valueOf(XDate.toString(new Date(), "yyyy-MM-dd")));
        return nh; 
    }
    boolean checkForm(){
        boolean check = true;
        String checkNull = "", checkValid = "", message = "";
        if (txtMaNH.getText().trim().length()==0){
            checkNull = checkNull + "Mã người học";
            check = false;
        }
        else if (dao.selectById(txtMaNH.getText().trim())!=null && row==-1){
            checkValid = checkValid + "Mã người học đã tồn tại\n";
            check = false;
        }
        if (txtHoTen.getText().trim().length()==0){
            checkNull = checkNull + ", Họ tên";
            check = false;
        }
        if (txtNgaySinh.getText().trim().length()==0){
            checkNull = checkNull + ", Ngày sinh";
            check = false;
        }
        else{
            try {
                Date ngaySinh = java.sql.Date.valueOf(txtNgaySinh.getText());
                Date now = new Date();
                if (ngaySinh.after(now)){
                    checkValid = checkValid + "Ngày sinh đang ở tương lai\n";
                    check = false;
                }
                else if (now.getYear()-ngaySinh.getYear() <18){
                    checkValid = checkValid + "Tuổi nhập vào phải từ 18 trở lên\n";
                }
            } 
            catch (Exception e) {
                checkValid = checkValid + "Ngày sinh phải đúng định dạng (yyyy-MM-dd)\n";
                check = false;
            }
        }
        if (txtPhone.getText().trim().length()==0){
            checkNull = checkNull + ", Số điện thoại";
            check = false;
        }
        else if (!txtPhone.getText().matches("0[0-9]{9}")){
            checkValid = checkValid + "Số điện thoại không đúng quy định\n";
            check = false;
        }
        if (txtEmail.getText().trim().length()==0){
            checkNull = checkNull + ", Email";
            check = false;
        }
        else if (!txtEmail.getText().matches("\\w+@\\w+(\\.\\w+){1,2}")){
            checkValid = checkValid + "Email phải đúng định dạng\n";
            check = false;
        }
        if (!checkNull.equals("")){
            if (checkNull.charAt(0)==','){
                checkNull = checkNull.substring(2);
            }
            message = message + checkNull + " không được để trống\n";
        }
        message = message + checkValid;
        if (check==false)
            MsgBox.alert(this, message);
        return check;
    }
    void updateStatus(){
        boolean edit = (row >= 0);
        boolean first = (row == 0);
        boolean last = (row == tblNguoiHoc.getRowCount()-1);
        txtMaNH.setEditable(!edit);
        btnAdd.setEnabled(!edit);
        btnEdit.setEnabled(edit);
        btnXoa.setEnabled(edit);
        btnFirst.setEnabled(edit);
        btnPrev.setEnabled(edit);
        btnNext.setEnabled(edit);
        btnLast.setEnabled(edit);
    }
    void xuatFileExcel(){
        XSSFWorkbook book = new XSSFWorkbook();
        String header[] = {"STT","MÃ NGƯỜI HỌC","HỌ VÀ TÊN","GIỚI TÍNH","NGÀY SINH","ĐIỆN THOẠI","EMAIL","MÃ NHÂN VIÊN","NGÀY TẠO"};
        try {   
            XSSFSheet sheet = book.createSheet();
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 8));
            Row row = sheet.createRow(0);
            Cell cell = row.createCell(0);
            cell.setCellValue("NGƯỜI HỌC");
            cell.setCellStyle(Excel.titleFormat(book));
            row = sheet.createRow(2);
            for (int j = 0; j < header.length; j++) {
                cell = row.createCell(j);
                cell.setCellValue(header[j]);
                cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, true));

            }
            int stt = 1;
            int rownum = 3;
            if (tblNguoiHoc.getSelectedRows().length>0)
                for (int i : tblNguoiHoc.getSelectedRows()) {
                    row = sheet.createRow(rownum++);
                    cell = row.createCell(0);
                    cell.setCellValue((int) stt++);
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(1);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 1));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(2);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 2));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(3);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 3));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(4);
                    cell.setCellValue(tblNguoiHoc.getValueAt(i, 4).toString());
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(5);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 5));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(6);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 6));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(7);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 7));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(8);
                    cell.setCellValue(tblNguoiHoc.getValueAt(i, 8).toString());
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                }
            else
                for (int i=0;i<tblNguoiHoc.getRowCount();i++){
                    row = sheet.createRow(rownum++);
                    cell = row.createCell(0);
                    cell.setCellValue((int) stt++);
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(1);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 1));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(2);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 2));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(3);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 3));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(4);
                    cell.setCellValue(XDate.toDate(tblNguoiHoc.getValueAt(i, 4).toString(), "dd-MM-yyyy"));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(5);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 5));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(6);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 6));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(7);
                    cell.setCellValue((String) tblNguoiHoc.getValueAt(i, 7));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                    cell = row.createCell(8);
                    cell.setCellValue(XDate.toDate(tblNguoiHoc.getValueAt(i, 8).toString(), "dd-MM-yyyy"));
                    cell.setCellStyle(Excel.cellFormat(book, BorderStyle.THIN, HorizontalAlignment.CENTER, false));
                }
            for (int k = 0; k < header.length; k++)
                sheet.autoSizeColumn(k);
            JFileChooser chooser = new JFileChooser();
            int result = chooser.showSaveDialog(this);
            if (result==JFileChooser.APPROVE_OPTION){
                 FileOutputStream out = new FileOutputStream(chooser.getSelectedFile());
                book.write(out);
                out.close();
                MsgBox.alert(this, "Xong");
            }
           
        } 
        catch (Exception e) {
            e.printStackTrace();
        }
    }
    void docFileExcel(){
        DefaultTableModel model = (DefaultTableModel) tblNguoiHoc.getModel();
        String header[] = {"STT","MÃ NGƯỜI HỌC","HỌ VÀ TÊN","GIỚI TÍNH","NGÀY SINH","ĐIỆN THOẠI","EMAIL","MÃ NHÂN VIÊN","NGÀY TẠO"};
        model.setRowCount(0);
        JFileChooser chooser = new JFileChooser();
        int result = chooser.showOpenDialog(this);
        if (result==JFileChooser.APPROVE_OPTION){
            try {
                List<Object[]> list = Excel.readFile(tblNguoiHoc, chooser.getSelectedFile(), header);
                boolean check = true;
                for (Object[] row : list) {
                    NguoiHoc nh = new NguoiHoc();
                    if (dao.selectById((String) row[1])==null && (String) row[1]!=null){
                        nh.setMaNH((String) row[1]);
                    }
                    else{
                        check = false;
                        break;
                    }     
                    if ((String) row[2]!=null)
                        nh.setHoTen((String) row[2]);
                    else{
                        check = false;
                        break;
                    } 
                    if (row[3].toString().equals("Nam"))
                        nh.setGioiTinh(true);
                    else if (row[3].toString().equals("Nữ"))
                        nh.setGioiTinh(false);
                    else{
                        check = false;
                        break;
                    } 
                    if ((XDate.toString(XDate.toDate((String) row[4], "yyyy-MM-dd"), "yyyy-MM-dd"))!=null){
                        nh.setNgaySinh(java.sql.Date.valueOf(XDate.toString(XDate.toDate((String) row[4], "yyyy-MM-dd"), "yyyy-MM-dd")));
                    }
                   else{
                        check = false;
                        break;
                    } 
                    if ((String) row[5]!=null)
                        nh.setDienThoai((String) row[5]);
                    else{
                        check = false;
                        break;
                    } 
                    if ((String) row[6]!=null)
                        nh.setEmail((String) row[6]);
                    else{
                        check = false;
                        break;
                    } 
                    nh.setGhiChu((String) row[7]);
                    nh.setMaNV(Auth.user.getMaNV());
                    nh.setNgayDK(java.sql.Date.valueOf(XDate.toString(new Date(), "yyyy-MM-dd")));
                    dao.insert(nh);    
                }
                if (check==false)
                    MsgBox.alert(this, "Lỗi khi đọc file");
                else{
                    MsgBox.alert(this, "Đã đọc tệp");
                }
                fillTable();
            } 
            catch (Exception e) {
                MsgBox.alert(this, "Thất bại");
                e.printStackTrace();
            }
        }
    }
    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        prev();
        edit();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
        edit();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
        edit();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
        edit();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        insert();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        update();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        fillTable();
    }//GEN-LAST:event_btnFindActionPerformed

    private void tblNguoiHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNguoiHocMouseClicked
        row = tblNguoiHoc.getSelectedRow();
        edit();
    }//GEN-LAST:event_tblNguoiHocMouseClicked

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        xuatFileExcel();
    }//GEN-LAST:event_btnExcelActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        docFileExcel();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NguoiHocJDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblNguoiHoc;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaNH;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
